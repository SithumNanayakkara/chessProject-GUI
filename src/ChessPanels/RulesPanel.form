<?xml version="1.0" encoding="UTF-8" ?>

<Form version="1.5" maxVersion="1.9" type="org.netbeans.modules.form.forminfo.JPanelFormInfo">
  <Properties>
    <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
      <Color blue="66" green="0" red="0" type="rgb"/>
    </Property>
    <Property name="opaque" type="boolean" value="false"/>
    <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
      <Dimension value="[1280, 720]"/>
    </Property>
  </Properties>
  <AuxValues>
    <AuxValue name="FormSettings_autoResourcing" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_autoSetComponentName" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_generateFQN" type="java.lang.Boolean" value="true"/>
    <AuxValue name="FormSettings_generateMnemonicsCode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_i18nAutoMode" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_layoutCodeTarget" type="java.lang.Integer" value="1"/>
    <AuxValue name="FormSettings_listenerGenerationStyle" type="java.lang.Integer" value="0"/>
    <AuxValue name="FormSettings_variablesLocal" type="java.lang.Boolean" value="false"/>
    <AuxValue name="FormSettings_variablesModifier" type="java.lang.Integer" value="2"/>
    <AuxValue name="designerSize" type="java.awt.Dimension" value="-84,-19,0,5,115,114,0,18,106,97,118,97,46,97,119,116,46,68,105,109,101,110,115,105,111,110,65,-114,-39,-41,-84,95,68,20,2,0,2,73,0,6,104,101,105,103,104,116,73,0,5,119,105,100,116,104,120,112,0,0,2,-48,0,0,5,0"/>
  </AuxValues>

  <Layout class="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout">
    <Property name="useNullLayout" type="boolean" value="true"/>
  </Layout>
  <SubComponents>
    <Component class="javax.swing.JButton" name="btnBackToMenu">
      <Properties>
        <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="41" green="3f" red="3c" type="rgb"/>
        </Property>
        <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
          <Font name="SansSerif" size="18" style="1"/>
        </Property>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="ff" green="ff" red="33" type="rgb"/>
        </Property>
        <Property name="text" type="java.lang.String" value="Back to Menu"/>
        <Property name="border" type="javax.swing.border.Border" editor="org.netbeans.modules.form.editors2.BorderEditor">
          <Border info="null"/>
        </Property>
        <Property name="cursor" type="java.awt.Cursor" editor="org.netbeans.modules.form.editors2.CursorEditor">
          <Color id="Hand Cursor"/>
        </Property>
        <Property name="defaultCapable" type="boolean" value="false"/>
      </Properties>
      <Events>
        <EventHandler event="actionPerformed" listener="java.awt.event.ActionListener" parameters="java.awt.event.ActionEvent" handler="btnBackToMenuActionPerformed"/>
      </Events>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="btnBackToMenu.setOpaque( false );"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="1120" y="670" width="130" height="-1"/>
        </Constraint>
      </Constraints>
    </Component>
    <Container class="javax.swing.JScrollPane" name="jScrollPane1">
      <Properties>
        <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
          <Color blue="41" green="3f" red="3c" type="rgb"/>
        </Property>
        <Property name="horizontalScrollBarPolicy" type="int" value="31"/>
        <Property name="verticalScrollBarPolicy" type="int" value="22"/>
        <Property name="cursor" type="java.awt.Cursor" editor="org.netbeans.modules.form.editors2.CursorEditor">
          <Color id="Default Cursor"/>
        </Property>
        <Property name="minimumSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[16, 1]"/>
        </Property>
        <Property name="opaque" type="boolean" value="false"/>
        <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
          <Dimension value="[1280, 720]"/>
        </Property>
      </Properties>
      <AuxValues>
        <AuxValue name="JavaCodeGenerator_AddingCodePost" type="java.lang.String" value="jScrollPane1.setOpaque( false );&#xa;jScrollPane1.getViewport().setOpaque( false );&#xa;jScrollPane1.getVerticalScrollBar().setUnitIncrement(16);"/>
        <AuxValue name="JavaCodeGenerator_SerializeTo" type="java.lang.String" value="RulesPanel_jScrollPane1"/>
      </AuxValues>
      <Constraints>
        <Constraint layoutClass="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout" value="org.netbeans.modules.form.compat2.layouts.DesignAbsoluteLayout$AbsoluteConstraintsDescription">
          <AbsoluteConstraints x="0" y="0" width="-1" height="720"/>
        </Constraint>
      </Constraints>

      <Layout class="org.netbeans.modules.form.compat2.layouts.support.JScrollPaneSupportLayout"/>
      <SubComponents>
        <Container class="javax.swing.JPanel" name="jPanel2">
          <Properties>
            <Property name="background" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
              <Color blue="33" green="99" red="ff" type="rgb"/>
            </Property>
            <Property name="focusable" type="boolean" value="false"/>
            <Property name="opaque" type="boolean" value="false"/>
            <Property name="preferredSize" type="java.awt.Dimension" editor="org.netbeans.beaninfo.editors.DimensionEditor">
              <Dimension value="[1280, 1900]"/>
            </Property>
          </Properties>

          <Layout>
            <DimensionLayout dim="0">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" attributes="0">
                      <EmptySpace min="-2" pref="187" max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="2" attributes="0">
                          <Component id="jLabel3" alignment="2" min="-2" pref="908" max="-2" attributes="0"/>
                          <Component id="jTextPane4" alignment="2" min="-2" pref="906" max="-2" attributes="0"/>
                          <Component id="jLabel4" alignment="2" min="-2" pref="908" max="-2" attributes="0"/>
                          <Component id="jTextPane3" alignment="2" min="-2" pref="906" max="-2" attributes="0"/>
                          <Component id="jLabel5" alignment="2" min="-2" pref="908" max="-2" attributes="0"/>
                          <Component id="jTextPane5" alignment="2" min="-2" pref="906" max="-2" attributes="0"/>
                          <Component id="jLabel6" alignment="2" min="-2" pref="908" max="-2" attributes="0"/>
                          <Component id="jTextPane6" alignment="2" min="-2" pref="906" max="-2" attributes="0"/>
                      </Group>
                      <EmptySpace min="20" pref="185" max="32767" attributes="0"/>
                  </Group>
                  <Group type="102" attributes="0">
                      <EmptySpace min="-2" pref="179" max="-2" attributes="0"/>
                      <Group type="103" groupAlignment="2" attributes="0">
                          <Component id="jLabel7" alignment="2" min="-2" pref="908" max="-2" attributes="0"/>
                          <Component id="jTextPane7" alignment="2" min="-2" pref="906" max="-2" attributes="0"/>
                      </Group>
                      <EmptySpace max="32767" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
            <DimensionLayout dim="1">
              <Group type="103" groupAlignment="0" attributes="0">
                  <Group type="102" alignment="1" attributes="0">
                      <EmptySpace min="-2" pref="34" max="-2" attributes="0"/>
                      <Component id="jLabel3" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
                      <Component id="jTextPane4" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="50" max="-2" attributes="0"/>
                      <Component id="jLabel4" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="24" max="-2" attributes="0"/>
                      <Component id="jTextPane3" min="-2" pref="310" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="50" max="-2" attributes="0"/>
                      <Component id="jLabel5" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
                      <Component id="jTextPane5" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="50" max="-2" attributes="0"/>
                      <Component id="jLabel6" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
                      <Component id="jTextPane6" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="50" max="-2" attributes="0"/>
                      <Component id="jLabel7" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="30" max="-2" attributes="0"/>
                      <Component id="jTextPane7" min="-2" max="-2" attributes="0"/>
                      <EmptySpace min="-2" pref="250" max="-2" attributes="0"/>
                  </Group>
              </Group>
            </DimensionLayout>
          </Layout>
          <SubComponents>
            <Component class="javax.swing.JLabel" name="jLabel3">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="99" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="Overview"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="horizontalTextPosition" type="int" value="0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextPane" name="jTextPane3">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="18" style="0"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="cc" type="rgb"/>
                </Property>
                <Property name="text" type="java.lang.String" value="The game can end under the following circumstances:&#xa;&#xa;If your opponent&apos;s king is under threat of capture, but your opponent has no legal move to prevent that capture, you have won. This is referred to as &quot;Checkmate&quot;.&#xa;&#xa;If a players king is not under threat of capture but that player has no legal moves anyway, the game is a draw.&#xa;&#xa;The game is also a draw if any of the following situations come up:&#xa;&#xa;&#x9;Neither player has enough pieces to be able to checkmate&#xa;&#xa;&#x9;The players agree to a draw"/>
                <Property name="autoscrolls" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="opaque" type="boolean" value="false"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JLabel" name="jLabel4">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="99" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="Aim of the Game"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="horizontalTextPosition" type="int" value="0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextPane" name="jTextPane4">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="18" style="0"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="cc" type="rgb"/>
                </Property>
                <Property name="text" type="java.lang.String" value="The game of chess is played on an 8x8 checkered board, where the rows are marked from 1-8 and referred to as &quot;ranks&quot; and the columns marked from &quot;A&quot; to &quot;H&quot;, referred to as &quot;files&quot;. The square marked as &quot;A1&quot; should be black. The player controlling the white pieces places his pieces on ranks 1 and 2, and the player playing the black pieces places his pieces on ranks 7 and 8. The pawns are placed on ranks 2 and 7. The other pieces are placed on ranks 1 and 8 as followed, starting from the &quot;A&quot; file: A rook, a knight, a bishop, a queen, a king, a bishop, a knight, and a rook. The player who has white goes first, and players alternate moves after that."/>
                <Property name="autoscrolls" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="opaque" type="boolean" value="false"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JLabel" name="jLabel5">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="99" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="Making a move"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="horizontalTextPosition" type="int" value="0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextPane" name="jTextPane5">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="18" style="0"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="cc" type="rgb"/>
                </Property>
                <Property name="text" type="java.lang.String" value="The six pieces move as follows:&#xa;&#xa;The Bishop can move any number of squares along the diagonal.&#xa;&#xa;The Rook can move any number of squares along the same rank or file.&#xa;&#xa;The Queen can move any number of squares along the same rank, file, or diagonal.&#xa;&#xa;The Knight moves to the closest square that is neither on the same rank, file, or diagonal. Essentially the knight moves in an &quot;L&quot; shape, two squares along a rank or file and then a single square perpendicular.The knight is the only piece that can &quot;jump over&quot; other pieces.&#xa;&#xa;The Pawn moves one square along the file, always towards the opponent&apos;s side of the board. The first time a pawn moves it is allowed to move two spaces along the file instead of one granted it has the space. A pawn can only capture a piece imminently along the diagonals in the direction of travel, not along the file it is currently travelling.&#xa;&#xa;The King can only move a single square in any direction, with the exception of castling (see below). The King can never place himself in a check."/>
                <Property name="autoscrolls" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="opaque" type="boolean" value="false"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JLabel" name="jLabel6">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="99" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="Placing a king in check"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="horizontalTextPosition" type="int" value="0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextPane" name="jTextPane6">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="18" style="0"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="cc" type="rgb"/>
                </Property>
                <Property name="text" type="java.lang.String" value="When a player makes a move in which any of his pieces threatens to capture the opponents king the next turn the king is said to be in check. A player in check must make a move that results in the check being relieved; be that by moving the king out of the way, capturing the threatning piece, or placing a piece in between the king and threatning piece. A player that has no legal move out of the check has lost the game (referred to a Checkmate). A player can be placed in check by multiple pieces at once, and must get out of all checks at once. A player can not remain in check. A player may never make a move that results in his own king being in check."/>
                <Property name="autoscrolls" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="opaque" type="boolean" value="false"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JLabel" name="jLabel7">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="24" style="1"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="99" type="rgb"/>
                </Property>
                <Property name="horizontalAlignment" type="int" value="0"/>
                <Property name="text" type="java.lang.String" value="Special moves"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="horizontalTextPosition" type="int" value="0"/>
              </Properties>
            </Component>
            <Component class="javax.swing.JTextPane" name="jTextPane7">
              <Properties>
                <Property name="font" type="java.awt.Font" editor="org.netbeans.beaninfo.editors.FontEditor">
                  <Font name="SansSerif" size="18" style="0"/>
                </Property>
                <Property name="foreground" type="java.awt.Color" editor="org.netbeans.beaninfo.editors.ColorEditor">
                  <Color blue="ff" green="ff" red="cc" type="rgb"/>
                </Property>
                <Property name="text" type="java.lang.String" value="Castling refers to a special move open to the King and Rooks. If neither the King nor Rook has been moved during the game, the rank separating them is clear of pieces, and during the castling process no space the king will move over or end on is under attack by an opponent piece, the player can move his king two spaces towards the rook, and the rook on the opposite side of the king. For example, assume that the white king on E1 and the white rook on A1 have direct line of sight and have not moved. The white player can, in a single move, move the king two spaces left (to C1) and the rook three spaces right (to D1). The player could also castle kingside, moving the king to G1 and the H1 rook to F1."/>
                <Property name="autoscrolls" type="boolean" value="false"/>
                <Property name="focusable" type="boolean" value="false"/>
                <Property name="opaque" type="boolean" value="false"/>
              </Properties>
            </Component>
          </SubComponents>
        </Container>
      </SubComponents>
    </Container>
  </SubComponents>
</Form>
